{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","players","setPlayers","useState","groups","setGroups","moneyUpdate","setMoneyUpdate","playerId","amount","groupId","buyIn","position","notes","leaderboard","setLeaderboard","detailedStats","setDetailedStats","page","setPage","useEffect","storedPlayers","localStorage","getItem","storedGroups","JSON","parse","updateLeaderboard","sort","a","b","totalMoney","savePlayers","updatedPlayers","setItem","stringify","saveGroups","updatedGroups","showPlayerStats","player","React","createElement","className","type","onClick","window","confirm","onSubmit","e","preventDefault","input","target","elements","name","trimmedName","trim","some","p","toLowerCase","alert","gamesPlayed","winCount","history","addPlayer","value","placeholder","map","index","key","newPlayers","filter","_","i","deletePlayer","g","totalPot","addGroup","group","newGroups","deleteGroup","parsedAmount","parseFloat","parsedBuyIn","netResult","timestamp","Date","toISOString","gameId","concat","parseInt","_objectSpread","id","indexOf","onChange","slice","Math","max","disabled","length","game","toLocaleString","abs","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e7f397e2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [players, setPlayers] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [moneyUpdate, setMoneyUpdate] = useState({\n    playerId: \"\",\n    amount: \"\",\n    groupId: \"\",\n    buyIn: \"\",\n    position: \"\",\n    notes: \"\",\n  });\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [detailedStats, setDetailedStats] = useState(null);\n  const [page, setPage] = useState(0);\n  const pageSize = 10;\n\n  useEffect(() => {\n    const storedPlayers = localStorage.getItem(\"players\");\n    const storedGroups = localStorage.getItem(\"groups\");\n    if (storedPlayers) setPlayers(JSON.parse(storedPlayers));\n    if (storedGroups) setGroups(JSON.parse(storedGroups));\n    updateLeaderboard();\n  }, []);\n\n  const updateLeaderboard = () => {\n    setLeaderboard([...players].sort((a, b) => b.totalMoney - a.totalMoney));\n  };\n\n  const savePlayers = (updatedPlayers) => {\n    setPlayers(updatedPlayers);\n    localStorage.setItem(\"players\", JSON.stringify(updatedPlayers));\n    updateLeaderboard();\n  };\n\n  const saveGroups = (updatedGroups) => {\n    setGroups(updatedGroups);\n    localStorage.setItem(\"groups\", JSON.stringify(updatedGroups));\n  };\n\n  const addPlayer = (name) => {\n    const trimmedName = name.trim();\n    if (!trimmedName) return;\n    if (\n      players.some((p) => p.name.toLowerCase() === trimmedName.toLowerCase())\n    ) {\n      alert(\"Player already exists\");\n      return;\n    }\n    savePlayers([\n      ...players,\n      {\n        name: trimmedName,\n        totalMoney: 0,\n        gamesPlayed: 0,\n        winCount: 0,\n        history: [],\n      },\n    ]);\n  };\n\n  const addGroup = (name) => {\n    const trimmedName = name.trim();\n    if (!trimmedName) return;\n    if (\n      groups.some((g) => g.name.toLowerCase() === trimmedName.toLowerCase())\n    ) {\n      alert(\"Group already exists\");\n      return;\n    }\n    saveGroups([\n      ...groups,\n      {\n        name: trimmedName,\n        totalPot: 0,\n        gamesPlayed: 0,\n        history: [],\n      },\n    ]);\n  };\n\n  const deletePlayer = (index) => {\n    const newPlayers = players.filter((_, i) => i !== index);\n    savePlayers(newPlayers);\n  };\n\n  const deleteGroup = (index) => {\n    const newGroups = groups.filter((_, i) => i !== index);\n    saveGroups(newGroups);\n  };\n\n  const handleMoneyUpdate = (e) => {\n    e.preventDefault();\n    const { playerId, amount, groupId, buyIn, position, notes } = moneyUpdate;\n    if (!playerId || !amount || !buyIn) {\n      alert(\"Please select a player, enter an amount, and specify buy-in\");\n      return;\n    }\n\n    const parsedAmount = parseFloat(amount);\n    const parsedBuyIn = parseFloat(buyIn);\n    const netResult = parsedAmount - parsedBuyIn;\n    const timestamp = new Date().toISOString();\n    const gameId = `${groupId}-${timestamp}`;\n\n    const updatedPlayers = players.map((player, index) => {\n      if (index === parseInt(playerId)) {\n        return {\n          ...player,\n          totalMoney: player.totalMoney + netResult,\n          gamesPlayed: player.gamesPlayed + 1,\n          winCount: netResult > 0 ? player.winCount + 1 : player.winCount,\n          history: [\n            ...player.history,\n            {\n              id: gameId,\n              amount: parsedAmount,\n              buyIn: parsedBuyIn,\n              netResult: netResult,\n              position,\n              notes,\n              timestamp,\n            },\n          ],\n        };\n      }\n      return player;\n    });\n\n    savePlayers(updatedPlayers);\n    updateLeaderboard();\n\n    if (\n      detailedStats &&\n      parseInt(playerId) === players.indexOf(detailedStats)\n    ) {\n      showPlayerStats(updatedPlayers[parseInt(playerId)]);\n    }\n\n    setMoneyUpdate({\n      playerId: \"\",\n      amount: \"\",\n      groupId: \"\",\n      buyIn: \"\",\n      position: \"\",\n      notes: \"\",\n    });\n  };\n\n  const showPlayerStats = (player) => {\n    setDetailedStats(player);\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex justify-between mb-6\">\n        <h1 className=\"text-2xl font-bold\">🃏 Poker Stats Tracker</h1>\n        <div className=\"flex gap-2\">\n          <button\n            type=\"button\"\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n            onClick={() => {\n              const storedPlayers = JSON.parse(\n                localStorage.getItem(\"players\") || \"[]\"\n              );\n              const storedGroups = JSON.parse(\n                localStorage.getItem(\"groups\") || \"[]\"\n              );\n              setPlayers(storedPlayers);\n              setGroups(storedGroups);\n              updateLeaderboard();\n              setDetailedStats(null);\n              setPage(0);\n            }}\n          >\n            Refresh Data\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\n            onClick={() => {\n              if (\n                window.confirm(\n                  \"Are you sure you want to reset all data? This cannot be undone.\"\n                )\n              ) {\n                localStorage.setItem(\"players\", \"[]\");\n                localStorage.setItem(\"groups\", \"[]\");\n                setPlayers([]);\n                setGroups([]);\n                setDetailedStats(null);\n                setLeaderboard([]);\n                setPage(0);\n                setMoneyUpdate({\n                  playerId: \"\",\n                  amount: \"\",\n                  groupId: \"\",\n                  buyIn: \"\",\n                  position: \"\",\n                  notes: \"\",\n                });\n              }\n            }}\n          >\n            Reset Data\n          </button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div>\n            <h2 className=\"text-xl font-bold mb-2\">👥 Add Player</h2>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const input = e.target.elements.name;\n                addPlayer(input.value);\n                input.value = \"\";\n              }}\n              className=\"flex gap-2\"\n            >\n              <input\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Player Name\"\n                className=\"flex-grow p-2 border rounded\"\n              />\n              <button\n                type=\"submit\"\n                className=\"bg-green-500 text-white px-4 py-2 rounded\"\n              >\n                Add\n              </button>\n            </form>\n          </div>\n\n          <div>\n            <h2 className=\"text-xl font-bold mb-2\">🎯 Players</h2>\n            <div className=\"border rounded\">\n              {players.map((player, index) => (\n                <div\n                  key={index}\n                  className=\"p-2 flex justify-between items-center hover:bg-gray-50 border-b last:border-b-0\"\n                >\n                  <span\n                    className=\"cursor-pointer\"\n                    onClick={() => showPlayerStats(player)}\n                  >\n                    {player.name}\n                  </span>\n                  <button\n                    onClick={() => deletePlayer(index)}\n                    className=\"text-red-500 px-2 py-1 rounded hover:bg-red-50\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div>\n            <h2 className=\"text-xl font-bold mb-2\">👥 Add Group</h2>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const input = e.target.elements.name;\n                addGroup(input.value);\n                input.value = \"\";\n              }}\n              className=\"flex gap-2\"\n            >\n              <input\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Group Name\"\n                className=\"flex-grow p-2 border rounded\"\n              />\n              <button\n                type=\"submit\"\n                className=\"bg-green-500 text-white px-4 py-2 rounded\"\n              >\n                Add\n              </button>\n            </form>\n          </div>\n\n          <div>\n            <h2 className=\"text-xl font-bold mb-2\">🎲 Groups</h2>\n            <div className=\"border rounded\">\n              {groups.map((group, index) => (\n                <div\n                  key={index}\n                  className=\"p-2 flex justify-between items-center hover:bg-gray-50 border-b last:border-b-0\"\n                >\n                  <span>{group.name}</span>\n                  <button\n                    onClick={() => deleteGroup(index)}\n                    className=\"text-red-500 px-2 py-1 rounded hover:bg-red-50\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-8\">\n        <h2 className=\"text-xl font-bold mb-4\">💰 Update Money</h2>\n        <form\n          onSubmit={handleMoneyUpdate}\n          className=\"grid grid-cols-1 md:grid-cols-2 gap-4 max-w-4xl\"\n        >\n          <select\n            value={moneyUpdate.playerId}\n            onChange={(e) =>\n              setMoneyUpdate({ ...moneyUpdate, playerId: e.target.value })\n            }\n            className=\"p-2 border rounded\"\n          >\n            <option value=\"\">Select Player</option>\n            {players.map((player, index) => (\n              <option key={index} value={index}>\n                {player.name}\n              </option>\n            ))}\n          </select>\n\n          <input\n            type=\"number\"\n            placeholder=\"Amount (Cashout)\"\n            value={moneyUpdate.amount}\n            onChange={(e) =>\n              setMoneyUpdate({ ...moneyUpdate, amount: e.target.value })\n            }\n            className=\"p-2 border rounded\"\n          />\n\n          <select\n            value={moneyUpdate.groupId}\n            onChange={(e) =>\n              setMoneyUpdate({ ...moneyUpdate, groupId: e.target.value })\n            }\n            className=\"p-2 border rounded\"\n          >\n            <option value=\"\">Select Group</option>\n            {groups.map((group, index) => (\n              <option key={index} value={index}>\n                {group.name}\n              </option>\n            ))}\n          </select>\n\n          <input\n            type=\"number\"\n            placeholder=\"Buy-in Amount\"\n            value={moneyUpdate.buyIn}\n            onChange={(e) =>\n              setMoneyUpdate({ ...moneyUpdate, buyIn: e.target.value })\n            }\n            className=\"p-2 border rounded\"\n          />\n\n          <input\n            placeholder=\"Position (e.g., 1st, 2nd)\"\n            value={moneyUpdate.position}\n            onChange={(e) =>\n              setMoneyUpdate({ ...moneyUpdate, position: e.target.value })\n            }\n            className=\"p-2 border rounded\"\n          />\n\n          <input\n            placeholder=\"Notes\"\n            value={moneyUpdate.notes}\n            onChange={(e) =>\n              setMoneyUpdate({ ...moneyUpdate, notes: e.target.value })\n            }\n            className=\"p-2 border rounded\"\n          />\n\n          <div className=\"md:col-span-2\">\n            <button\n              type=\"submit\"\n              className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600\"\n            >\n              Update\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"mt-8\">\n        <h2 className=\"text-xl font-bold mb-4\">🏆 Leaderboard</h2>\n        <div className=\"border rounded\">\n          {leaderboard\n            .slice(page * pageSize, (page + 1) * pageSize)\n            .map((player, index) => (\n              <div\n                key={index}\n                className=\"p-2 flex justify-between items-center hover:bg-gray-50 border-b last:border-b-0 cursor-pointer\"\n                onClick={() => showPlayerStats(player)}\n              >\n                <span>{player.name}</span>\n                <span\n                  className={\n                    player.totalMoney >= 0 ? \"text-green-600\" : \"text-red-600\"\n                  }\n                >\n                  ${player.totalMoney}\n                </span>\n              </div>\n            ))}\n        </div>\n\n        <div className=\"flex justify-between mt-2\">\n          <button\n            onClick={() => setPage(Math.max(0, page - 1))}\n            disabled={page === 0}\n            className=\"px-4 py-2 bg-gray-100 rounded disabled:opacity-50\"\n          >\n            Previous\n          </button>\n          <button\n            onClick={() => setPage(page + 1)}\n            disabled={(page + 1) * pageSize >= leaderboard.length}\n            className=\"px-4 py-2 bg-gray-100 rounded disabled:opacity-50\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n\n      {detailedStats && (\n        <div className=\"mt-8\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-bold\">{detailedStats.name}'s Stats</h2>\n            <button\n              onClick={() => setDetailedStats(null)}\n              className=\"text-gray-500 px-2 py-1 rounded hover:bg-gray-100\"\n            >\n              Close\n            </button>\n          </div>\n\n          <div className=\"space-y-2\">\n            <p>\n              <strong>Total Money:</strong> ${detailedStats.totalMoney}\n            </p>\n            <p>\n              <strong>Games Played:</strong> {detailedStats.gamesPlayed}\n            </p>\n            <p>\n              <strong>Wins:</strong> {detailedStats.winCount}\n            </p>\n          </div>\n\n          <h3 className=\"text-lg font-bold mt-4 mb-2\">Game History</h3>\n          <div className=\"border rounded divide-y\">\n            {detailedStats.history.map((game, index) => (\n              <div key={index} className=\"p-2\">\n                <div className=\"text-sm text-gray-600\">\n                  {new Date(game.timestamp).toLocaleString()}\n                </div>\n                <div className=\"text-gray-600\">\n                  Buy-in: ${game.buyIn} / Cashout: ${game.amount}\n                </div>\n                <div\n                  className={\n                    game.netResult >= 0\n                      ? \"text-green-600 font-medium\"\n                      : \"text-red-600 font-medium\"\n                  }\n                >\n                  {game.netResult >= 0 ? \"Profit\" : \"Loss\"}: $\n                  {Math.abs(game.netResult)}\n                </div>\n                {game.position && (\n                  <div className=\"text-sm text-gray-600\">\n                    Position: {game.position}\n                  </div>\n                )}\n                {game.notes && (\n                  <div className=\"text-sm text-gray-600\">\n                    Notes: {game.notes}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      <div className=\"text-center text-sm text-gray-500 py-2 mt-4 border-t\">\n        Designed with ♠️ by Param Sampat\n      </div>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}